version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "product-quantity-add:1:1,product-quantity-remove:1:1"
    networks:
      - kafka-net

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    container_name: authentication-service
    networks:
      - kafka-net
    depends_on:
      - kafka

  product-catalog-service:
    build:
      context: ./product-catalog-service
      dockerfile: Dockerfile
    container_name: product-catalog-service
    networks:
      - kafka-net
    depends_on:
      - kafka

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    networks:
      - kafka-net
    depends_on:
      - kafka

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3003:3003"
    networks:
      - kafka-net
    depends_on:
      - kafka
      - authentication-service
      - product-catalog-service
      - order-service

  postgres:
    image: postgres:latest
    container_name: postgres
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kafka-net

volumes:
  postgres_data:

networks:
  kafka-net:
    driver: bridge
